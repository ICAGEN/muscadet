% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clustering.R
\name{clusterMuscadet}
\alias{clusterMuscadet}
\title{Perform Clustering on a muscadet Object}
\usage{
clusterMuscadet(
  x,
  dist_method = "euclidean",
  hclust_method = "ward.D",
  knn_affinity = 40,
  var_affinity = 1,
  knn_SNF = 40,
  iter_SNF = 50,
  weights = rep(1, length(slot(x, "omics"))),
  knn_imp = 10,
  k_range = seq(2, 10, 1)
)
}
\arguments{
\item{x}{A \code{muscadet} object containing omics data and previously calculated
log R ratio matrices (\code{muscadet}).}

\item{dist_method}{String specifying the distance method for
\code{\link[Rfast:Dist]{Rfast::Dist()}} (\code{character} string). Default is \code{"euclidean"}.}

\item{hclust_method}{String specifying the hierarchical clustering method
for \code{\link[fastcluster:hclust]{fastcluster::hclust()}} (\code{character} string). Default is \code{"ward.D"}.}

\item{knn_affinity}{Integer specifying the number of nearest neighbors used
in affinity matrix construction with \code{\link[SNFtool:affinityMatrix]{SNFtool::affinityMatrix()}}
(\code{integer}). Default is \code{40}.}

\item{var_affinity}{Numeric value for the variance parameter in affinity
matrix construction with \code{\link[SNFtool:affinityMatrix]{SNFtool::affinityMatrix()}} (\code{numeric}). Default
is \code{1}.}

\item{knn_SNF}{Integer specifying the number of nearest neighbors used for
Similarity Network Fusion (SNF) with \code{\link[=weightedSNF]{weightedSNF()}} (\code{integer}).
Default is \code{40}.}

\item{iter_SNF}{Integer specifying the number of iterations for SNF with
\code{\link[=weightedSNF]{weightedSNF()}} (\code{integer}). Default is \code{50}.}

\item{weights}{Numeric vector of non-negative values of length equal to the
number of omic (internally normalized to sum to 1) (\code{numeric} vector). It
specifies the relatives weights of each omic for SNF with
\code{\link[=weightedSNF]{weightedSNF()}}. Omics with a weight of 0 will not contribute to
the clustering. Default assigns equal weights to all omics.}

\item{knn_imp}{Integer specifying the number of nearest neighbors to use for
imputation of missing clusters with \code{\link[=imputeClusters]{imputeClusters()}}
(\code{integer}). Default is \code{10}.}

\item{k_range}{Numeric vector specifying the range of clusters (k) to
evaluate (\code{numeric} vector). Default is from 2 to 10.}
}
\value{
A \code{\link{muscadet}} object with updated clustering results
stored in the \code{"clustering"} slot, including clustering parameters,
distance and affinity matrices, the fused similarity matrix, cluster
assignments, silhouette objects and widths and a default optimal k number
of clusters.
}
\description{
This function performs clustering on the cells within a
\code{\link{muscadet}} object using the log R ratio matrices. It calculates
pairwise distances, constructs affinity matrices, applies Similarity Network
Fusion (SNF) to integrate several omic, and assign clusters to cell. Clusters
for missing cells are imputed by similarity using k nearest-neighbor method.
}
\details{
The function calculates pairwise distances for cells within each omic dataset
using the specified \code{dist_method}.

It constructs affinity matrices based on these distances, applies SNF to
generate a fused similarity matrix.

Weights can be assigned to each omic dataset to prioritize certain data types
over others, allowing users to tailor the analysis based on the
characteristics and importance of each dataset.

It then performs a hierarchical clustering using the specified
\code{hclust_method} to assign clusters to each cell with data in all omics.

Then, it imputes cluster assignments for missing cells based on their
nearest neighbors.

Finally, a default optimal number of cluster (k) is found based on average
silhouette widths.
}
\examples{
# Clutering on muscadet object
data(muscadet_obj)
muscadet_obj <- clusterMuscadet(
  muscadet_obj,
  dist_method = "euclidean",
  hclust_method = "ward.D",
  k_range = 2:5
)

# Cluster assignments (for k = 3)
slot(muscadet_obj, "clustering")[["clusters"]][["3"]]
table(slot(muscadet_obj, "clustering")[["clusters"]][["3"]])

# Silhouette width per k
unlist(slot(muscadet_obj, "clustering")[["silhouette"]][["sil.w.avg"]])

# Optimal k according to silhouette width index
slot(muscadet_obj, "clustering")[["k.opt"]]

}
\seealso{
\itemize{
\item \code{\link{muscadet-class}}
\item Details on Similarity Network Fusion: \code{\link[=weightedSNF]{weightedSNF()}}
\item Plot cluster result as heatmap with \code{\link[=heatmapMuscadet]{heatmapMuscadet()}}.
\item Plot silhouette widths with \code{\link[=plotSil]{plotSil()}}.
\item Plot several cluster validation indexes with \code{\link[=plotIndexes]{plotIndexes()}}.
\item After cluster partition validation, assign final cluster assignments with
\code{\link[=assignClusters]{assignClusters()}}.
}
}
