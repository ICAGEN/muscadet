% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cnaCalling.R
\name{annotateSegments}
\alias{annotateSegments}
\title{Annotate consensus segments across cluster with CNA states}
\usage{
annotateSegments(
  x,
  consensus_segs,
  ncells,
  ploidy = 2,
  minoverlap = 1e+06,
  clonal.thresh = 0.9
)
}
\arguments{
\item{x}{A data frame containing cluster segments information with the
following required columns:
\itemize{
\item \code{chrom}: Chromosome name (\code{factor} or \code{character}).
\item \code{start}: Start position of the segment (\code{numeric}).
\item \code{end}: End position of the segment (\code{numeric}).
\item \code{cluster}: Cluster identifier (\code{numeric} or \code{integer}).
\item \code{tcn.em}: Total copy number (EM algorithm) (\code{numeric}).
\item \code{lcn.em}: Lower copy number (EM algorithm) (\code{numeric}).
}}

\item{consensus_segs}{A \code{data.frame} of unique consensus segments.}

\item{ncells}{A named vector specifying the number of cells per cluster
(\code{numeric} vector). The names must match the cluster identifiers in the
\code{cluster} column of \code{x}.}

\item{ploidy}{An \code{integer} specifying the expected ploidy (default is \code{2}).
Used to determine whether a segment is classified as gain, loss, or neutral.}

\item{minoverlap}{A non-negative integer specifying the minimum overlap
between a cluster specific segment and a consensus segment (see
\code{\link[IRanges:findOverlaps-methods]{IRanges::findOverlaps()}}) (\code{integer}). Default: \code{1e6}.}

\item{clonal.thresh}{Minimum cell proportion to label a
segment as clonal. Default: \code{1e6}.}
}
\value{
A \code{data.frame} with the consensus segments annotated per cluster,
including CNA state, clonal status, and proportion of cells per cluster and
across clusters:
\itemize{
\item \code{ncells}: Number of cells in cluster.
\item \code{prop.cluster}: Proportion of cells in cluster relatively to the total number of cells.
\item \code{gnl}: GNL (gain ; neutral ; loss) status as an integer value (1 ; 0 ; -1).
\item \code{loh}: Loss of heterozygosity status (logical).
\item \code{state}: State of segment (gain ; loss ; neu ; cnloh).
\item \code{cna}: Segment CNA status (logical).
\item \code{cna_state}: State of CNA segment (gain ; loss ; cnloh).
\item \code{prop.tot}: Proportion of cells for the state across clusters.
\item \code{state_clonal}: Clonal state of segment (gain ; loss ; neu ; cnloh).
\item \code{cna_clonal}: Segment clonal CNA status (logical).
\item \code{cna_clonal_state}: Clonal state of CNA segment (gain ; loss ; cnloh).
}
}
\description{
This function annotates consensus segments across clusters using
segment-level data from each cluster. It assigns states (i.e., gain, loss,
cnloh, neutral), computes proportions of cells per cluster, and defines
whether alterations are clonal.
}
\examples{
#' # Example data frame
segs <- data.frame(
    chrom = c("chr1", "chr1", "chr2", "chr2"),
    start = c(1.2e6, 1.1e6, 3.1e6, 3.2e6),
    end = c(2.5e6, 2.6e6, 5.5e6, 5.7e6),
    cluster = c("1", "2", "1", "2"),
    cf.em = c(1, 1, 1, 1),
    tcn.em = c(1, 2, 3, 3),
    lcn.em = c(0, 1, 1, 1)
)

consensus_segs <- getSegConsensus(
    x = segs,
    ncells = c("1" = 50, "2" = 30)
)

# Annotate consensus segments
table <- annotateSegments(
    x = segs,
    consensus_segs = consensus_segs,
    ncells = c("1" = 50, "2" = 30)
)

print(table)

}
\seealso{
\code{\link[=getSegConsensus]{getSegConsensus()}}, \code{\link[=cnaCalling]{cnaCalling()}}
}
