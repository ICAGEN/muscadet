% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots.R
\name{heatmapStep}
\alias{heatmapStep}
\title{Create heatmap and distribution plots of the different steps of computing log
R ratios}
\usage{
heatmapStep(
  obj,
  step,
  filename,
  title = NULL,
  col_quantiles = c(0.1, 0.4, 0.6, 0.9),
  col_breaks = NULL,
  colors = c("#00008E", "white", "white", "#630000")
)
}
\arguments{
\item{obj}{A list provided as output by the \code{\link[=computeLogRatioATAC]{computeLogRatioATAC()}} or
\code{\link[=computeLogRatioRNA]{computeLogRatioRNA()}} functions with the argument \code{all_steps = TRUE}. It
includes tumor and reference matrices at each step of the computing of log
R ratio matrices.}

\item{step}{The step within the \code{obj} list to use for plotting (\code{character}
string). It must match one of the names in \code{obj}.}

\item{filename}{File path to save the output plot (\code{character} string). The
file format is inferred from the extension (".png", ".pdf" or ".svg").}

\item{title}{Title of the plot (\code{character} string). If \code{NULL}, the title is
automatically generated using the provided step argument and its
corresponding value name (\code{obj[[step]]$name}).}

\item{col_quantiles}{A numeric vector of length 4, specifying the quantiles
to use for the color breakpoints in the heatmap (\code{numeric}). Either
\code{col_quantiles} or \code{col_breaks} must be provided, if both are provided
\code{col_breaks} is used. Default is \code{c(0.1, 0.4, 0.6, 0.9)}.}

\item{col_breaks}{A numeric vector of length 4, specifying custom breakpoints
for the color scale in the heatmap (\code{numeric}). Either \code{col_quantiles} or
\code{col_breaks} must be provided, if both are provided \code{col_breaks} is used.
Default is \code{NULL}.}

\item{colors}{A character vector of 4 colors used for the color scale of the
heatmap (\code{character} vector). Default is \code{c("#00008E", "white", "white", "#630000")}.}
}
\value{
The function does not return any value but saves a
heatmaps-histograms plot to the specified file.
}
\description{
This function generates heatmap and distribution plots for tumor and
reference cells for any step of computing log R ratios matrices. The
input object corresponds to the output of \code{\link[=computeLogRatioATAC]{computeLogRatioATAC()}} or
\code{\link[=computeLogRatioRNA]{computeLogRatioRNA()}} with the argument \code{all_steps = TRUE}.
}
\examples{
\dontrun{
# Create muscomic objects
atac <- CreateMuscomicObject(
    type = "ATAC",
    mat_counts = mat_counts_atac_tumor,
    allele_counts = allele_counts_atac_tumor,
    features = peaks
)
rna <- CreateMuscomicObject(
    type = "RNA",
    mat_counts = mat_counts_rna_tumor,
    allele_counts = allele_counts_rna_tumor,
    features = genes
)
atac_ref <- CreateMuscomicObject(
    type = "ATAC",
    mat_counts = mat_counts_atac_ref,
    allele_counts = allele_counts_atac_ref,
    features = peaks
)
rna_ref <- CreateMuscomicObject(
    type = "RNA",
    mat_counts = mat_counts_rna_ref,
    allele_counts = allele_counts_rna_ref,
    features = genes
)

# Create muscadet objects
muscadet <- CreateMuscadetObject(
    omics = list(atac, rna),
    bulk.lrr = bulk_lrr,
    bulk.label = "WGS",
    genome = "hg38"
)
muscadet_ref <- CreateMuscadetObject(
    omics = list(atac_ref, rna_ref),
    genome = "hg38"
)

# Compute log R ratios with `all_steps = TRUE`
obj_atac_all <- computeLogRatioATAC(
    matTumor = matCounts(muscadet)$ATAC,
    matRef = matCounts(muscadet_ref)$ATAC,
    peaksCoord = coordFeatures(muscadet)$ATAC,
    genome = slot(muscadet, "genome"),
    minReads = 1, # low value for example subsampled datasets
    minPeaks = 1, # low value for example subsampled datasets
    all_steps = TRUE
)
names(obj_atac_all)

# Plot heatmap and distribution of values for Step01
heatmapStep(obj = obj_atac_all,
            step = "step01",
            filename = file.path(tempdir(), "step01.png"),
            title = "Example data - Step 01")

# Plot heatmap and distribution of values for all steps
for (step in grep("step", names(obj_atac_all), value = TRUE)) {
    heatmapStep(
        obj_atac_all,
        step,
        filename = file.path(tempdir(), paste0("ATAC_", step, ".pdf")),
        title = paste("ATAC -", step)
    )
}
}

}
