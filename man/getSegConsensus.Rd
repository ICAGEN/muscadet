% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cnaCalling.R
\name{getSegConsensus}
\alias{getSegConsensus}
\title{Get consensus segments across clusters}
\usage{
getSegConsensus(x, ncells, dist.breakpoints = 1e+06)
}
\arguments{
\item{x}{A data frame containing cluster segments information with the
following required columns:
\itemize{
\item \code{chrom}: Chromosome name (\code{factor} or \code{character}).
\item \code{start}: Start position of the segment (\code{numeric}).
\item \code{end}: End position of the segment (\code{numeric}).
\item \code{cluster}: Cluster identifier for each breakpoint (\code{numeric}).
}}

\item{ncells}{A named vector specifying the number of cells per cluster
(\code{numeric} vector). The names should correspond to the cluster identifiers
in the \code{cluster} column of \code{x}.}

\item{dist.breakpoints}{A numeric value specifying the minimum genomic
distance between adjacent breakpoints to be grouped into the same consensus
segment (\code{numeric} value). Default: \code{1e6}.}
}
\value{
A data frame containing consensus segments with the following columns:
\itemize{
\item \code{chrom}: Chromosome name.
\item \code{start}: Start position of the consensus segment.
\item \code{end}: End position of the consensus segment.
}
}
\description{
This function processes segments data, in which clusters have different
segment breakpoints, to identify consensus segments across all clusters. It
groups breakpoints within a specified genomic distance (\code{dist.breakpoints})
and calculates representative breakpoints for each group based on cluster
size and median coordinates.
}
\examples{
# Example data frame
segs <- data.frame(
  chrom = c("chr1", "chr1", "chr2", "chr2"),
  start = c(1.2e6, 1.1e6, 3.1e6, 3.2e6),
  end = c(2.5e6, 2.6e6, 5.5e6, 5.7e6),
  cluster = c("1", "2", "1", "2")
)

# Generate consensus segments
consensus_segs <- getSegConsensus(segs,
                                  ncells = c("1" = 50, "2" = 30),
                                  dist.breakpoints = 1e6)
print(consensus_segs)

}
\seealso{
\code{\link[=cnaCalling]{cnaCalling()}}
}
